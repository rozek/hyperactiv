{"version":3,"file":"index.js","sources":["../../src/react/context/index.js","../../src/react/hooks/context.js","../../src/react/watchHoc.js","../../src/react/watchComponent.js","../../src/react/hooks/dependencies.js","../../src/http/tools.js","../../src/react/hooks/useNormalizedRequest.js","../../src/react/hooks/useResource.js","../../src/react/hooks/index.js","../../src/react/index.js","../../src/react/hooks/useRequest.js"],"sourcesContent":["import React from 'react'\nimport ReactDOMServer from 'react-dom/server'\n\nexport const HyperactivContext = React.createContext({\n  store: null,\n  client: null\n})\n\nexport const SSRContext = React.createContext(null)\n\nexport function HyperactivProvider({ children, store, client }) {\n  return React.createElement(\n    HyperactivContext.Provider,\n    {\n      value: { store, client }\n    },\n    children\n  )\n}\n\nexport function SSRProvider({ children, promises }) {\n  return React.createElement(\n    SSRContext.Provider,\n    {\n      value: promises\n    },\n    children\n  )\n}\n\nexport async function preloadData(jsx, { depth = null } = {}) {\n  let loopIterations = 0\n  const promises = []\n  while(loopIterations === 0 || promises.length > 0) {\n    if(depth !== null && loopIterations >= depth)\n      break\n    promises.length = 0\n    ReactDOMServer.renderToStaticMarkup(\n      React.createElement(\n        SSRProvider,\n        { promises },\n        jsx\n      )\n    )\n    await Promise.all(promises)\n    loopIterations++\n  }\n}\n","import { useContext } from 'react'\nimport { HyperactivContext } from '../context/index.js'\n\nexport function useStore() {\n  const context = useContext(HyperactivContext)\n  return context && context.store\n}\n\nexport function useClient() {\n  const context = useContext(HyperactivContext)\n  return context && context.client\n}\n","import React from 'react'\nimport hyperactiv from '../../src/index.js'\nimport { useStore } from './hooks/context.js'\nconst { computed, dispose } = hyperactiv\n\n/**\n * Wraps a class component and automatically updates it when the store mutates.\n * @param {*} Component The component to wrap\n */\nconst watchClassComponent = Component => new Proxy(Component, {\n  construct: function(Target, argumentsList) {\n    // Create a new Component instance\n    const instance = new Target(...argumentsList)\n    // Ensures that the forceUpdate in correctly bound\n    instance.forceUpdate = instance.forceUpdate.bind(instance)\n    // Monkey patch the componentWillUnmount method to do some clean up on destruction\n    const originalUnmount =\n      typeof instance.componentWillUnmount === 'function' &&\n      instance.componentWillUnmount.bind(instance)\n    instance.componentWillUnmount = function(...args) {\n      dispose(instance.forceUpdate)\n      if(originalUnmount) {\n        originalUnmount(...args)\n      }\n    }\n    // Return a proxified Component\n    return new Proxy(instance, {\n      get: function(target, property) {\n        if(property === 'render') {\n          // Compute the render function and forceUpdate on changes\n          return computed(target.render.bind(target), { autoRun: false, callback: instance.forceUpdate })\n        }\n        return target[property]\n      }\n    })\n  }\n})\n\n/**\n * Wraps a functional component and automatically updates it when the store mutates.\n * @param {*} component The component to wrap\n */\nfunction watchFunctionalComponent(component) {\n  const wrapper = props => {\n    const [, forceUpdate] = React.useReducer(x => x + 1, 0)\n    const store = useStore()\n    const injectedProps = props.store ? props : {\n      ...props,\n      store\n    }\n    const [child, setChild] = React.useState(null)\n    React.useEffect(function onMount() {\n      const callback = () => forceUpdate()\n      setChild(() => computed(component, {\n        autoRun: false,\n        callback\n      }))\n      return function onUnmount() {\n        dispose(callback)\n      }\n    }, [])\n    return child ? child(injectedProps) : component(injectedProps)\n  }\n  wrapper.displayName = component.displayName || component.name\n  return wrapper\n}\n\n/**\n * Wraps a component and automatically updates it when the store mutates.\n * @param {*} Component The component to wrap\n */\nexport const watch = Component =>\n  typeof Component === 'function' &&\n    (!Component.prototype || !Component.prototype.isReactComponent) ?\n    watchFunctionalComponent(Component) :\n    watchClassComponent(Component)\n","import React from 'react'\nimport hyperactiv from '../../src/index.js'\nconst { computed, dispose } = hyperactiv\n\nexport class Watch extends React.Component {\n  constructor(props) {\n    super(props)\n    this._callback = () => {\n      this._mounted &&\n            this.forceUpdate.bind(this)()\n    }\n    this.computeRenderMethod(props.render)\n  }\n  componentWillUnmount() {\n    this._mounted = false\n    dispose(this._callback)\n  }\n  componentDidMount() {\n    this._mounted = true\n  }\n  computeRenderMethod(newRender) {\n    if(!!newRender && this._currentRender !== newRender) {\n      this._currentRender = computed(newRender, {\n        autoRun: false,\n        callback: this._callback\n      })\n    }\n  }\n  render() {\n    const { render } = this.props\n    this.computeRenderMethod(render)\n    return this._currentRender && this._currentRender() || null\n  }\n}\n","export default new Proxy({\n  references: {\n    wretch: null,\n    normaliz: null\n  }\n}, {\n  get(target, property) {\n    if(target[property])\n      return target[property]\n    throw 'Hook dependencies are not registered!\\nUse `.setHooksDependencies({ wretch, normaliz }) to set them.'\n  }\n})","export const defaultRootKey = '__requests__'\nexport const defaultSerialize = (method, url) => `${method}@${url}`\nexport const identity = _ => _\n\nexport const normalizedOperations = {\n  read(mappings, store) {\n    const storeFragment = {}\n    Object.entries(mappings).forEach(([ entity, ids ]) => {\n      storeFragment[entity] = {}\n      ids.forEach(key => {\n        storeFragment[entity][key] = store[entity] && store[entity][key] || null\n      })\n    })\n    return storeFragment\n  },\n  write(normalizedData, store) {\n    Object.entries(normalizedData).forEach(([ entity, entityData ]) => {\n      if(!store[entity]) {\n        store[entity] = {}\n      }\n\n      Object.entries(entityData).forEach(([ key, value ]) => {\n        if(store[entity][key]) {\n          if(typeof store[entity][key] === 'object' && typeof value === 'object') {\n            Object.entries(value).forEach(([k, v]) => {\n              store[entity][key][k] = v\n            })\n          } else {\n            store[entity][key] = value\n          }\n        } else {\n          store[entity][key] = value\n        }\n      })\n    })\n  }\n}\n","import { useState, useMemo, useEffect, useContext, useRef } from 'react'\n\nimport { identity, defaultSerialize, defaultRootKey, normalizedOperations } from '../../http/tools.js'\nimport { HyperactivContext, SSRContext } from '../context/index.js'\nimport dependencies from './dependencies.js'\n\nexport function useNormalizedRequest(url, {\n  store,\n  normalize,\n  client,\n  skip = () => false,\n  beforeRequest = identity,\n  afterRequest = identity,\n  rootKey = defaultRootKey,\n  serialize = defaultSerialize,\n  bodyType = 'json',\n  policy = 'cache-first',\n  ssr = true\n}) {\n  const contextValue = useContext(HyperactivContext)\n  const ssrContext = ssr && useContext(SSRContext)\n  store = contextValue && contextValue.store || store\n  client = contextValue && contextValue.client || client || dependencies.references.wretch()\n\n  const configuredClient = useMemo(() => beforeRequest(client.url(url)), [client, beforeRequest, url])\n  const storeKey = useMemo(() => serialize('get', configuredClient._url), [configuredClient])\n  if(!store[rootKey]) {\n    store[rootKey] = {}\n  }\n  const storedMappings = store[rootKey][storeKey]\n\n  const cacheLookup = policy !== 'network-only'\n\n  const [ error, setError ] = useState(null)\n  const [ loading, setLoading ] = useState(\n    !cacheLookup ||\n        !storedMappings\n  )\n  const [ networkData, setNetworkData ] = useState(null)\n  const data =\n        cacheLookup ?\n          storedMappings &&\n            normalizedOperations.read(storedMappings, store) :\n          networkData\n\n  const unmounted = useRef(false)\n  useEffect(() => () => unmounted.current = false, [])\n  const pendingRequests = useRef([])\n\n  function refetch(noState) {\n    if(!noState && !unmounted.current) {\n      setLoading(true)\n      setError(null)\n      setNetworkData(null)\n    }\n    const promise = configuredClient\n      .get()\n    // eslint-disable-next-line no-unexpected-multiline\n      [bodyType](body => afterRequest(body))\n      .then(result => {\n        const normalizedData = dependencies.references.normaliz(result, normalize)\n        store[rootKey][storeKey] = Object.entries(normalizedData).reduce((mappings, [ entity, dataById ]) => {\n          mappings[entity] = Object.keys(dataById)\n          return mappings\n        }, {})\n        normalizedOperations.write(normalizedData, store)\n        const storeSlice = normalizedOperations.read(store[rootKey][storeKey], store)\n        pendingRequests.current.splice(pendingRequests.current.indexOf(promise), 1)\n        if(!ssrContext && !unmounted.current && pendingRequests.current.length === 0) {\n          setNetworkData(storeSlice)\n          setLoading(false)\n        }\n        return storeSlice\n      })\n      .catch(error => {\n        pendingRequests.current.splice(pendingRequests.current.indexOf(promise), 1)\n        if(!ssrContext && !unmounted.current && pendingRequests.current.length === 0) {\n          setError(error)\n          setLoading(false)\n        }\n        if(ssrContext)\n          throw error\n      })\n\n    pendingRequests.current.push(promise)\n    if(ssrContext) {\n      ssrContext.push(promise)\n    }\n    return promise\n  }\n\n  function checkAndRefetch(noState = false) {\n    if(\n      !skip() &&\n            !error &&\n            (policy !== 'cache-first' || !data)\n    ) {\n      refetch(noState)\n    }\n  }\n\n  useEffect(function() {\n    checkAndRefetch()\n  }, [ storeKey, skip() ])\n\n  if(ssrContext) {\n    checkAndRefetch(true)\n  }\n\n  return skip() ? {\n    data: null,\n    error: null,\n    loading: false,\n    refetch\n  } : {\n    loading,\n    data,\n    error,\n    refetch\n  }\n}\n","import { useMemo, useContext } from 'react'\nimport { useNormalizedRequest } from './useNormalizedRequest.js'\nimport { HyperactivContext } from '../context/index.js'\n\nfunction formatData(data, entity, id) {\n  return (\n    data ?\n      id !== null ?\n        data[entity] && data[entity][id] :\n        data[entity] && Object.values(data[entity]) :\n      data\n  )\n}\n\nexport function useResource(entity, url, {\n  id = null,\n  store,\n  normalize,\n  client,\n  skip: skipProp = () => false,\n  beforeRequest,\n  afterRequest,\n  serialize,\n  rootKey,\n  bodyType,\n  policy = 'cache-first',\n  ssr = true\n}) {\n  const contextValue = useContext(HyperactivContext)\n  store = contextValue && contextValue.store || store\n  const storedEntity = id && store[entity] && store[entity][id]\n\n  const {\n    data,\n    loading,\n    error,\n    refetch: normalizedRefetch\n  } = useNormalizedRequest(url, {\n    store,\n    normalize: {\n      schema: [],\n      ...normalize,\n      entity\n    },\n    client,\n    skip() {\n      return (\n        policy === 'cache-first' && storedEntity ||\n                skipProp()\n      )\n    },\n    beforeRequest,\n    afterRequest,\n    serialize,\n    rootKey,\n    bodyType,\n    policy,\n    ssr\n  })\n\n  const formattedData = useMemo(() =>\n    formatData(data, entity, id)\n  , [data, entity, id])\n\n  const refetch = () => normalizedRefetch().then(data =>\n    formatData(data, entity, id)\n  )\n\n  if(policy !== 'network-only' && storedEntity) {\n    return {\n      data: storedEntity,\n      loading: false,\n      error: null,\n      refetch\n    }\n  }\n\n  return {\n    data: formattedData,\n    loading,\n    error,\n    refetch\n  }\n}\n","import dependencies from './dependencies.js'\n\nexport function setHooksDependencies({ wretch, normaliz }) {\n  if(wretch) dependencies.references.wretch = wretch\n  if(normaliz) dependencies.references.normaliz = normaliz\n}\n\nexport * from './useNormalizedRequest.js'\nexport * from './useRequest.js'\nexport * from './useResource.js'\nexport * from './context.js'\n","import hyperactiv from '../../src/index.js'\n\nexport { watch } from './watchHoc.js'\nexport { Watch } from './watchComponent.js'\nexport * from './hooks/index.js'\nexport * from './context/index.js'\n\nexport const store = function(obj, options = {}) {\n  return hyperactiv.observe(obj, Object.assign({ deep: true, batch: false }, options))\n}\n","import { useState, useMemo, useEffect, useContext, useRef } from 'react'\nimport { identity, defaultSerialize, defaultRootKey } from '../../http/tools.js'\nimport { HyperactivContext, SSRContext } from '../context/index.js'\nimport dependencies from './dependencies.js'\n\nexport function useRequest(url, {\n  store,\n  client,\n  skip = () => false,\n  beforeRequest = identity,\n  afterRequest = identity,\n  rootKey = defaultRootKey,\n  serialize = defaultSerialize,\n  bodyType = 'json',\n  policy = 'cache-first',\n  ssr = true\n}) {\n  const contextValue = useContext(HyperactivContext)\n  const ssrContext = ssr && useContext(SSRContext)\n  store = contextValue && contextValue.store || store\n  client = contextValue && contextValue.client || client || dependencies.references.wretch()\n\n  const configuredClient = useMemo(() => beforeRequest(client.url(url)), [client, beforeRequest, url])\n  const storeKey = useMemo(() => serialize('get', configuredClient._url), [configuredClient])\n  if(!store[rootKey]) {\n    store[rootKey] = {}\n  }\n  const storedData = store[rootKey][storeKey]\n\n  const cacheLookup = policy !== 'network-only'\n\n  const [ error, setError ] = useState(null)\n  const [ loading, setLoading ] = useState(\n    !cacheLookup ||\n        !storedData\n  )\n  const [ networkData, setNetworkData ] = useState(null)\n  const data = cacheLookup ? storedData : networkData\n\n  const unmounted = useRef(false)\n  useEffect(() => () => unmounted.current = false, [])\n  const pendingRequests = useRef([])\n\n  function refetch(noState) {\n    if(!noState && !unmounted.current) {\n      setLoading(true)\n      setError(null)\n      setNetworkData(null)\n    }\n    const promise = configuredClient\n      .get()\n    // eslint-disable-next-line no-unexpected-multiline\n      [bodyType](body => afterRequest(body))\n      .then(result => {\n        store[rootKey][storeKey] = result\n        pendingRequests.current.splice(pendingRequests.current.indexOf(promise), 1)\n        if(!ssrContext && !unmounted.current && pendingRequests.current.length === 0) {\n          setNetworkData(result)\n          setLoading(false)\n        }\n        return result\n      })\n      .catch(error => {\n        pendingRequests.current.splice(pendingRequests.current.indexOf(promise), 1)\n        if(!ssrContext && !unmounted.current && pendingRequests.current.length === 0) {\n          setError(error)\n          setLoading(false)\n        }\n        if(ssrContext)\n          throw error\n      })\n\n    pendingRequests.current.push(promise)\n    if(ssrContext) {\n      ssrContext.push(promise)\n    }\n    return promise\n  }\n\n  function checkAndRefetch(noState = false) {\n    if(\n      !skip() &&\n            !error &&\n            (policy !== 'cache-first' || !data)\n    ) {\n      refetch(noState)\n    }\n  }\n\n  useEffect(function() {\n    checkAndRefetch()\n  }, [ storeKey, skip() ])\n\n  if(ssrContext) {\n    checkAndRefetch(true)\n  }\n\n  return skip() ? {\n    data: null,\n    error: null,\n    loading: false,\n    refetch\n  } : {\n    loading,\n    data,\n    error,\n    refetch\n  }\n}\n"],"names":["HyperactivContext","React","createContext","store","client","SSRContext","SSRProvider","children","promises","createElement","Provider","value","useStore","context","useContext","computed","dispose","hyperactiv","Watch","Component","constructor","props","super","this","_callback","_mounted","forceUpdate","bind","computeRenderMethod","render","componentWillUnmount","componentDidMount","newRender","_currentRender","autoRun","callback","dependencies","Proxy","references","wretch","normaliz","get","target","property","defaultRootKey","defaultSerialize","method","url","identity","_","normalizedOperations","read","mappings","storeFragment","Object","entries","forEach","entity","ids","key","write","normalizedData","entityData","k","v","useNormalizedRequest","normalize","skip","beforeRequest","afterRequest","rootKey","serialize","bodyType","policy","ssr","contextValue","ssrContext","configuredClient","useMemo","storeKey","_url","storedMappings","cacheLookup","error","setError","useState","loading","setLoading","networkData","setNetworkData","data","unmounted","useRef","useEffect","current","pendingRequests","refetch","noState","promise","body","then","result","reduce","dataById","keys","storeSlice","splice","indexOf","length","catch","push","checkAndRefetch","formatData","id","values","async","jsx","depth","loopIterations","ReactDOMServer","renderToStaticMarkup","Promise","all","obj","options","observe","assign","deep","batch","storedData","skipProp","storedEntity","normalizedRefetch","schema","formattedData","prototype","isReactComponent","construct","Target","argumentsList","instance","originalUnmount","args","watchClassComponent","component","wrapper","useReducer","x","injectedProps","child","setChild","displayName","name","watchFunctionalComponent"],"mappings":"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"}